workspace(name = "pt_rust_jvmti_agent")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

# CONFIGURE `@phasicj` ########################################################

local_repository(
    name = "phasicj",
    path = "../../../..",
)

load(
    "@phasicj//bazel:external_repositories.bzl",
    "bazel_skylib",
    "dwtj_rules_java",
    "apply_dwtj_remote_openjdk_repository",
)

# CONFIGURE `@bazel_skylib` ###################################################
# This dependency is needed for `@io_bazel_rules_rust`. Here we set it to a
# particular version (instead of using the version used in the
# `rust_repositories()` macro below).

bazel_skylib()
load("@bazel_skylib//:workspace.bzl", "bazel_skylib_workspace")
bazel_skylib_workspace()

# CONFIGURE `@io_bazel_rules_rust` ############################################

_RULES_RUST_COMMIT = "e64700dc9b8b3869bce4f77b78c33cb9d088cc4b"
_RULES_RUST_SHA256 = "eb384450d3b89332b386173233daa66a71e13cf63fe6d9ee51bd09fba0eb41f2"

http_archive(
    name = "io_bazel_rules_rust",
    url = "https://github.com/bazelbuild/rules_rust/archive/{}.tar.gz".format(_RULES_RUST_COMMIT),
    sha256 = _RULES_RUST_SHA256,
    strip_prefix = "rules_rust-{}".format(_RULES_RUST_COMMIT),
)

load("@io_bazel_rules_rust//rust:repositories.bzl", "rust_repositories")

rust_repositories()

load("@io_bazel_rules_rust//:workspace.bzl", "rust_workspace")

rust_workspace()

# CONFIGURE `@dwtj_rules_java` ################################################

dwtj_rules_java()

load("@dwtj_rules_java//java:repositories.bzl", "dwtj_remote_openjdk_repository")

apply_dwtj_remote_openjdk_repository(
    "openjdk_linux_x64",
    dwtj_remote_openjdk_repository,
)

load("@openjdk_linux_x64//:defs.bzl", "register_java_toolchains")

register_java_toolchains()
