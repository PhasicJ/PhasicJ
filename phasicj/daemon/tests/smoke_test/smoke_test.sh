#!/bin/sh -

set -e

DAEMON_EXEC="$1"
CLIENT_EXEC="$2"
INPUT_DATABASE="$3"

SOCKET="pjevents.S"
OUTPUT_DATABASE="pjevents.db"
export OUTPUT_DATABASE_TEXT_FILE="pjevents.db.txt"

# Some properties to check for in SQLite database generated by the daemon.
EXPECTED_NUMBER_OF_LINES="1"
EXPECTED_GREP_PATTERN_TO_FIND="Hello, PhasicJ!"

# Start the daemon in the background.
"$DAEMON_EXEC" --socket "$SOCKET" --database "$OUTPUT_DATABASE" &
DAEMON_PID="$!"
echo Daemon PID: "$DAEMON_PID"

# Give the daemon some time to bind to the UNIX domain socket file.
sleep 1

# Run the replay client with the input database and then wait for it to finish.
"$CLIENT_EXEC" --socket "$SOCKET" --database "$INPUT_DATABASE" &
CLIENT_PID="$!"
echo Client PID: "$CLIENT_PID"

echo 'Waiting for client to finish'
wait "$CLIENT_PID"

# Print the contents of the database to a text file to make it easy to check.
sqlite3 $OUTPUT_DATABASE 'select * from rtevents' > "$OUTPUT_DATABASE_TEXT_FILE"

# Check that the contents of the database are as expected.
ACTUAL_NUMBER_OF_LINES=$(wc -l "$OUTPUT_DATABASE_TEXT_FILE" | cut -d " " -f1)
if [ "$ACTUAL_NUMBER_OF_LINES" -ne "$EXPECTED_NUMBER_OF_LINES" ]; then
   echo "Error: Unexpected number of lines"
   exit 1
fi

# Check that the output database included the expected pattern.
grep "$EXPECTED_GREP_PATTERN_TO_FIND" "$OUTPUT_DATABASE_TEXT_FILE" > /dev/null

# Log the complete textual contents of the output database.
echo "======"
cat "$OUTPUT_DATABASE_TEXT_FILE"
